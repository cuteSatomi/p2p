<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zzx.p2p.base.mapper.AccountMapper">
    <resultMap id="BaseResultMap" type="com.zzx.p2p.base.domain.Account">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="trade_password" property="tradePassword" jdbcType="VARCHAR"/>
        <result column="usable_amount" property="usableAmount" jdbcType="DECIMAL"/>
        <result column="frozen_amount" property="frozenAmount" jdbcType="DECIMAL"/>
        <result column="borrow_limit" property="borrowLimit" jdbcType="DECIMAL"/>
        <result column="version" property="version" jdbcType="INTEGER"/>
        <result column="un_receive_interest" property="unReceiveInterest" jdbcType="DECIMAL"/>
        <result column="un_receive_principal" property="unReceivePrincipal" jdbcType="DECIMAL"/>
        <result column="un_return_amount" property="unReturnAmount" jdbcType="DECIMAL"/>
        <result column="remain_borrow_limit" property="remainBorrowLimit" jdbcType="DECIMAL"/>
    </resultMap>
    <insert id="insert">
        insert into `account` (id, version, trade_password, usable_amount, frozen_amount, borrow_limit, un_receive_interest,
          un_receive_principal, un_return_amount, remain_borrow_limit)
        values (#{id}, 0, #{tradePassword,jdbcType=VARCHAR}, #{usableAmount,jdbcType=DECIMAL}, #{frozenAmount,jdbcType=DECIMAL},
          #{borrowLimit,jdbcType=DECIMAL}, #{unReceiveInterest,jdbcType=DECIMAL},
          #{unReceivePrincipal,jdbcType=DECIMAL}, #{unReturnAmount,jdbcType=DECIMAL}, #{remainBorrowLimit,jdbcType=DECIMAL})
    </insert>
    <update id="updateByPrimaryKey">
        update `account`
        set
          version = version + 1,
          trade_password = #{tradePassword,jdbcType=VARCHAR},
          usable_amount = #{usableAmount,jdbcType=DECIMAL},
          frozen_amount = #{frozenAmount,jdbcType=DECIMAL},
          borrow_limit = #{borrowLimit,jdbcType=DECIMAL},
          un_receive_interest = #{unReceiveInterest,jdbcType=DECIMAL},
          un_receive_principal = #{unReceivePrincipal,jdbcType=DECIMAL},
          un_return_amount = #{unReturnAmount,jdbcType=DECIMAL},
          remain_borrow_limit = #{remainBorrowLimit,jdbcType=DECIMAL}
        where id = #{id,jdbcType=BIGINT} AND version = #{version}
    </update>

    <sql id="base_column">
        id, trade_password, usable_amount, frozen_amount, borrow_limit, version, un_receive_interest,
        un_receive_principal, un_return_amount, remain_borrow_limit
    </sql>

    <select id="selectByPrimaryKey" resultMap="BaseResultMap">
        select <include refid="base_column"/>
        from `account`
        where id = #{id,jdbcType=BIGINT}
    </select>
</mapper>