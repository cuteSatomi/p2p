<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zzx.p2p.base.mapper.UserFileMapper">
    <resultMap id="BaseResultMap" type="com.zzx.p2p.base.domain.UserFile">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="image" property="image" jdbcType="VARCHAR"/>
        <result column="state" property="state" jdbcType="TINYINT"/>
        <result column="remark" property="remark" jdbcType="VARCHAR"/>
        <result column="audit_time" property="auditTime" jdbcType="TIMESTAMP"/>
        <result column="apply_time" property="applyTime" jdbcType="TIMESTAMP"/>
        <result column="score" property="score" jdbcType="TINYINT"/>
        <association property="applier" javaType="com.zzx.p2p.base.domain.LoginInfo" columnPrefix="ap_">
            <id column="id" property="id"/>
            <result column="username" property="username"/>
        </association>
        <association property="fileType" javaType="com.zzx.p2p.base.domain.SystemDictionaryItem" columnPrefix="sdi_">
            <id column="id" property="id"/>
            <result column="title" property="title"/>
        </association>
    </resultMap>
    <resultMap id="FullResultMap" type="com.zzx.p2p.base.domain.UserFile" extends="BaseResultMap">
        <association property="auditor" javaType="com.zzx.p2p.base.domain.LoginInfo" columnPrefix="au_">
            <id column="id" property="id"/>
            <result column="username" property="username"/>
        </association>
    </resultMap>
    <resultMap id="UserListResultMap" type="com.zzx.p2p.base.domain.UserFile">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="image" property="image" jdbcType="VARCHAR"/>
        <result column="state" property="state" jdbcType="TINYINT"/>
        <result column="remark" property="remark" jdbcType="VARCHAR"/>
        <result column="audit_time" property="auditTime" jdbcType="TIMESTAMP"/>
        <result column="apply_time" property="applyTime" jdbcType="TIMESTAMP"/>
        <result column="score" property="score" jdbcType="TINYINT"/>
        <association property="fileType" javaType="com.zzx.p2p.base.domain.SystemDictionaryItem" columnPrefix="sdi_">
            <id column="id" property="id"/>
            <result column="title" property="title"/>
        </association>
    </resultMap>
    <insert id="insert" useGeneratedKeys="true" keyProperty="id">
        insert into `user_file` (state, remark, audit_time, apply_time, auditor_id,
            applier_id, score, image, file_type_id)
        values (#{state,jdbcType=TINYINT}, #{remark,jdbcType=VARCHAR}, #{auditTime,jdbcType=TIMESTAMP},
          #{applyTime,jdbcType=TIMESTAMP}, #{auditor.id,jdbcType=BIGINT}, #{applier.id,jdbcType=BIGINT},
          #{score,jdbcType=TINYINT}, #{image,jdbcType=VARCHAR}, #{fileType.id,jdbcType=BIGINT})
    </insert>
    <update id="updateByPrimaryKey">
        update `user_file`
        set state = #{state,jdbcType=TINYINT},
          remark = #{remark,jdbcType=VARCHAR},
          audit_time = #{auditTime,jdbcType=TIMESTAMP},
          apply_time = #{applyTime,jdbcType=TIMESTAMP},
          auditor_id = #{auditor.id,jdbcType=BIGINT},
          applier_id = #{applier.id,jdbcType=BIGINT},
          score = #{score,jdbcType=TINYINT},
          image = #{image,jdbcType=VARCHAR},
          file_type_id = #{fileType.id,jdbcType=BIGINT}
        where id = #{id,jdbcType=BIGINT}
    </update>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap">
        select f.id, f.state, f.remark, f.audit_time, f.apply_time, f.auditor_id, f.score, f.image,
            ap.id as ap_id, ap.username as ap_username, sdi.id as sdi_id, sdi.title as sdi_title
        from `user_file` f inner join login_info ap on f.applier_id = ap.id left join system_dictionary_item sdi on f.file_type_id = sdi.id
        where f.id = #{id,jdbcType=BIGINT}
    </select>
    <select id="selectAll" resultMap="BaseResultMap">
        select id, state, remark, audit_time, apply_time, auditor_id, applier_id, score,
        image, file_type_id
        from `user_file`
    </select>

    <select id="listFilesByHasType" resultMap="UserListResultMap">
        select f.id, f.state, f.remark, f.audit_time, f.apply_time, f.auditor_id, f.score, f.image,
        sdi.id as sdi_id, sdi.title as sdi_title
        from user_file f left join system_dictionary_item sdi on f.file_type_id = sdi.id
        where f.applier_id = #{id}
        <if test="hasType">
            and f.file_type_id is not null
        </if>
        <if test="!hasType">
            and f.file_type_id is null
        </if>
    </select>

    <sql id="base_where">
        <where>
            <if test="beginDate!=null">
                and f.apply_time &gt;= #{beginDate}
            </if>
            <if test="endDate!=null">
                and f.apply_time &lt;= #{endDate}
            </if>
            <if test="state>-1">
                and f.state = #{state}
            </if>
            <if test="applierId!=null">
                and f.applier_id = #{applierId}
            </if>
            and f.file_type_id is not null
        </where>
    </sql>

    <select id="queryForCount" resultType="int">
        select count(f.id)
        from user_file f
        <include refid="base_where"/>
    </select>
    <select id="query" resultMap="FullResultMap">
        select f.id, f.state, f.remark, f.audit_time, f.apply_time, f.auditor_id, f.score, f.image,
        ap.id as ap_id, ap.username as ap_username, au.id as au_id, au.username as au_username,
        sdi.id as sdi_id, sdi.title as sdi_title
        from user_file f inner join login_info ap on f.applier_id = ap.id left join login_info au on f.auditor_id =
        au.id
        inner join system_dictionary_item sdi on f.file_type_id = sdi.id
        <include refid="base_where"/>
        <if test="pageSize>0">
            limit #{start}, #{pageSize}
        </if>
    </select>
</mapper>